version: '3.8'

services:

  appeals_service:
    container_name: appeals_service
    build:
      context: https://github.com/Appeals-service/Appeals_service.git
      dockerfile: /docker/Dockerfile
    env_file:
      - ./.env_as
    ports:
      - 8000:8000
    depends_on:
      broker:
        condition: service_healthy
        restart: true
      appeals_service_db:
        condition: service_started
    networks:
      - app_network

  broker:
    container_name: broker
    image: rabbitmq:4.0.5
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 3s
      timeout: 3s
      retries: 3
      start_period: 10s
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq_data/data
    env_file:
      - ./.env_rmq
    restart: always
    expose:
      - 5672
    networks:
      - app_network

  appeals_service_db:
    container_name: appeals_service_db
    image: postgres:14.4-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env_db
    restart: always
    expose:
      - 5432
    networks:
      - app_network

  auth_service:
    container_name: auth_service
    build: https://github.com/Appeals-service/Authorization_service.git
    env_file:
      - ./.env_auth
    expose:
      - 8001
    depends_on:
      - auth_service_db
    networks:
      - app_network

  auth_service_db:
    container_name: auth_service_db
    image: postgres:14.4-alpine
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env_db_auth
    restart: always
    expose:
      - 5433
    networks:
      - app_network

  logging_service:
    container_name: logging_service
    build: https://github.com/Appeals-service/Logging_service.git
    env_file:
      - ./.env_logging
    depends_on:
      broker:
        condition: service_healthy
        restart: true
    restart: on-failure
    networks:
      - app_network

  notification_service:
    container_name: notification_service
    build: https://github.com/Appeals-service/Notification_service.git
    env_file:
      - ./.env_notification
    depends_on:
      broker:
        condition: service_healthy
        restart: true
    restart: on-failure
    networks:
      - app_network

volumes:
  auth_postgres_data:
  postgres_data:
  rabbitmq_data:

networks:
  app_network:
